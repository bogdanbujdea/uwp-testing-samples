// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Calculator.UITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            XamlEdit uIFirstEdit = this.UIUWPCalculatorWindow.UIFirstEdit;
            #endregion

            // Verify that the 'Text' property of 'First' text box equals '2'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIFirstEditText, uIFirstEdit.Text);
        }
        
        /// <summary>
        /// CheckIfResultIsCorrect - Use 'CheckIfResultIsCorrectExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckIfResultIsCorrect()
        {
            #region Variable Declarations
            XamlEdit uIResultEdit = this.UIUWPCalculatorWindow.UIResultEdit;
            #endregion

            // Verify that the 'Text' property of 'Result' text box equals '5'
            Assert.AreEqual(this.CheckIfResultIsCorrectExpectedValues.UIResultEditText, uIResultEdit.Text);
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual CheckIfResultIsCorrectExpectedValues CheckIfResultIsCorrectExpectedValues
        {
            get
            {
                if ((this.mCheckIfResultIsCorrectExpectedValues == null))
                {
                    this.mCheckIfResultIsCorrectExpectedValues = new CheckIfResultIsCorrectExpectedValues();
                }
                return this.mCheckIfResultIsCorrectExpectedValues;
            }
        }
        
        public UIUWPCalculatorWindow UIUWPCalculatorWindow
        {
            get
            {
                if ((this.mUIUWPCalculatorWindow == null))
                {
                    this.mUIUWPCalculatorWindow = new UIUWPCalculatorWindow();
                }
                return this.mUIUWPCalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private CheckIfResultIsCorrectExpectedValues mCheckIfResultIsCorrectExpectedValues;
        
        private UIUWPCalculatorWindow mUIUWPCalculatorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'First' text box equals '2'
        /// </summary>
        public string UIFirstEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckIfResultIsCorrect'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckIfResultIsCorrectExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Result' text box equals '5'
        /// </summary>
        public string UIResultEditText = "5";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUWPCalculatorWindow : XamlWindow
    {
        
        public UIUWPCalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "UWPCalculator";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("UWPCalculator");
            #endregion
        }
        
        #region Properties
        public XamlEdit UIFirstEdit
        {
            get
            {
                if ((this.mUIFirstEdit == null))
                {
                    this.mUIFirstEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUIFirstEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "First";
                    this.mUIFirstEdit.WindowTitles.Add("UWPCalculator");
                    #endregion
                }
                return this.mUIFirstEdit;
            }
        }
        
        public XamlEdit UISecondEdit
        {
            get
            {
                if ((this.mUISecondEdit == null))
                {
                    this.mUISecondEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUISecondEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "Second";
                    this.mUISecondEdit.WindowTitles.Add("UWPCalculator");
                    #endregion
                }
                return this.mUISecondEdit;
            }
        }
        
        public XamlButton UICalculateButton
        {
            get
            {
                if ((this.mUICalculateButton == null))
                {
                    this.mUICalculateButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUICalculateButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "ProcessResult";
                    this.mUICalculateButton.WindowTitles.Add("UWPCalculator");
                    #endregion
                }
                return this.mUICalculateButton;
            }
        }
        
        public XamlEdit UIResultEdit
        {
            get
            {
                if ((this.mUIResultEdit == null))
                {
                    this.mUIResultEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUIResultEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "Result";
                    this.mUIResultEdit.WindowTitles.Add("UWPCalculator");
                    #endregion
                }
                return this.mUIResultEdit;
            }
        }
        #endregion
        
        #region Fields
        private XamlEdit mUIFirstEdit;
        
        private XamlEdit mUISecondEdit;
        
        private XamlButton mUICalculateButton;
        
        private XamlEdit mUIResultEdit;
        #endregion
    }
}
